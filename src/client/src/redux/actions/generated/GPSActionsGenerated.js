/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN GPSActionsGenerated.js PLEASE EDIT ../GPSActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import GPSApi from "../../../api/GPSApi";

let actionsFunction = {

  //CRUD METHODS

  // Create gps
  createGPS: function(gps) {
    return function(dispatch) {
      return GPSApi
        .createGPS(gps)
        .then(gps => {
          dispatch(actionsFunction.createGPSSuccess(gps));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createGPSSuccess: function(gps) {
    return { type: types.CREATE_GPS_SUCCESS, payload: gps };
  },


  // Delete gps
  deleteGPS: function(id) {
    return function(dispatch) {
      return GPSApi
        .deleteGPS(id)
        .then(gps => {
          dispatch(actionsFunction.deleteGPSSuccess(gps));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteGPSSuccess: function(gps) {
    return { type: types.DELETE_GPS_SUCCESS, payload: gps };
  },


  // Get gps
  loadGPS: function(id) {
    return function(dispatch) {
      return GPSApi
        .getOneGPS(id)
        .then(gps => {
          dispatch(actionsFunction.loadGPSSuccess(gps));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadGPSSuccess: function(gps) {
    return { type: types.GET_GPS_SUCCESS, payload: gps };
  },

  // Load  list
  loadGPSList: function() {
    return function(dispatch) {
      return GPSApi
        .getGPSList()
        .then(list => {
          dispatch(actionsFunction.loadGPSListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadGPSListSuccess: function(list) {
    return { type: types.LIST_GPS_SUCCESS, payload: list };
  },

	
  // Save gps
  saveGPS: function(gps) {
    return function(dispatch) {
      return GPSApi
        .saveGPS(gps)
        .then(gps => {
          dispatch(actionsFunction.saveGPSSuccess(gps));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveGPSSuccess: function(gps) {
    return { type: types.UPDATE_GPS_SUCCESS, payload: gps };
  },


};

export default actionsFunction;
