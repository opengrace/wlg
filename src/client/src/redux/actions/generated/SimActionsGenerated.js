/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN SimActionsGenerated.js PLEASE EDIT ../SimActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import SimApi from "../../../api/SimApi";

let actionsFunction = {

  //CRUD METHODS

  // Create sim
  createSim: function(sim) {
    return function(dispatch) {
      return SimApi
        .createSim(sim)
        .then(sim => {
          dispatch(actionsFunction.createSimSuccess(sim));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createSimSuccess: function(sim) {
    return { type: types.CREATE_SIM_SUCCESS, payload: sim };
  },


  // Delete sim
  deleteSim: function(id) {
    return function(dispatch) {
      return SimApi
        .deleteSim(id)
        .then(sim => {
          dispatch(actionsFunction.deleteSimSuccess(sim));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteSimSuccess: function(sim) {
    return { type: types.DELETE_SIM_SUCCESS, payload: sim };
  },


  // Get sim
  loadSim: function(id) {
    return function(dispatch) {
      return SimApi
        .getOneSim(id)
        .then(sim => {
          dispatch(actionsFunction.loadSimSuccess(sim));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadSimSuccess: function(sim) {
    return { type: types.GET_SIM_SUCCESS, payload: sim };
  },

  // Load  list
  loadSimList: function() {
    return function(dispatch) {
      return SimApi
        .getSimList()
        .then(list => {
          dispatch(actionsFunction.loadSimListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadSimListSuccess: function(list) {
    return { type: types.LIST_SIM_SUCCESS, payload: list };
  },

	
  // Save sim
  saveSim: function(sim) {
    return function(dispatch) {
      return SimApi
        .saveSim(sim)
        .then(sim => {
          dispatch(actionsFunction.saveSimSuccess(sim));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveSimSuccess: function(sim) {
    return { type: types.UPDATE_SIM_SUCCESS, payload: sim };
  },


};

export default actionsFunction;
